/****************************************************************************
**
** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of the QtAddOn.JsonStream module of the Qt.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Digia.  For licensing terms and
** conditions see http://qt.digia.com/licensing.  For further information
** use the contact form at http://qt.digia.com/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.  Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!

\page qmlpm.html
\previouspage Standard Process Manager
\contentspage {Declarative Process Manager} {Contents}

\title Declarative Process Manager

The declarative process manager is a QProcessManager object with
appropriate declarations so that it can be used from QML.  Sample
use:

\qml
  import QtQuick 2.0
  import ProcessManager 1.0

  PmManager {
    id: myManager

    factories: [
      GdbProcessBackendFactory,
      StandardProcessBackendFactory
    ]

    onProcessStarted: console.log("Process "+identifier+" started");
    onProcessFinished: console.log("Process "+identifier+" finished");

    function make(info) {
      var process = create(info);
      return process.identifier;
    }

    function start(id) {
      var process = processForIdentifier(id);
      process.start();
    }

    function stop(id) {
      var process = processForIdentifier(id);
      process.stop();
    }
  }
\endqml

*/
